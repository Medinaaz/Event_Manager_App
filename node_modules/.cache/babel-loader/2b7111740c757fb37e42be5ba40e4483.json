{"ast":null,"code":"var _jsxFileName = \"/Users/yakuphanbilgic/Desktop/d/I\\u0307TU\\u0308/2019-2020 | Fall/CP/CP4/cp4-front/src/components/createEvent/createEvent.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport config from \"../../config\";\nimport NavBar from \"../nav-bar/navigationBar\";\nimport Typography from '@material-ui/core/Typography';\nimport { Paper, MenuItem, Button, FormControlLabel, Grid, TextField } from \"@material-ui/core\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Form } from 'react-final-form';\n\nclass CreateEvent extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleCheckboxListChange = values => {// values is array of selected item. e.g. ['apple', 'banana']\n    };\n\n    this.state = {\n      date: \"\",\n      time: \"\",\n      venueName: \"\",\n      eventName: \"\",\n      contacts: [],\n      selectedContacts: []\n    };\n    this.submit_data = this.submit_data.bind(this);\n  }\n\n  componentDidMount() {\n    let userId = localStorage.getItem(\"userId\");\n\n    if (userId === null) {\n      this.props.history.push(\"/login\");\n    } //use user id to get contacts and change state\n\n\n    this.setState({\n      contacts: [{\n        key: 1,\n        data: \"first\"\n      }]\n    });\n  }\n\n  submit_data(e) {\n    e.preventDefault();\n    console.log(this.state);\n    axios({\n      method: 'post',\n      url: config.EVENT_URL,\n      headers: {\n        'Content-Type': 'application/json' //'Authorization': this.state.user_token\n\n      },\n      data: {//\"players\": [this.state.user_id],\n      }\n    }).then(res => {\n      if (res.data.success) {\n        this.setState({//share_code: res.data.data.shareCode,\n        });\n      }\n    }).catch(err => {\n      console.log(\"err\", err);\n    });\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Paper, {\n      variant: \"outlined\",\n      style: {\n        backgroundColor: \"#b3e5fc\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        marginTop: 40,\n        width: 600,\n        height: 500,\n        padding: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Create a Meeting\"), React.createElement(Form, {\n      onSubmit: this.submit_data,\n      render: ({\n        handleSubmit,\n        form,\n        submitting,\n        pristine,\n        values\n      }) => React.createElement(\"form\", {\n        onSubmit: this.submit_data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        style: {\n          marginLeft: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"event\",\n        name: \"eventName\",\n        label: \"Event Name\",\n        onChange: this.handleChange,\n        value: this.state.eventName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        style: {\n          marginRight: -50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"venue\",\n        name: \"venueName\",\n        onChange: this.handleChange,\n        label: \"Venue Name\",\n        value: this.state.venueName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        style: {\n          marginTop: 40,\n          marginLeft: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"date\",\n        label: \"Event Date\",\n        name: \"date\",\n        onChange: this.handleChange,\n        style: {\n          width: 170\n        },\n        type: \"date\",\n        value: this.state.date,\n        InputLabelProps: {\n          shrink: true\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        style: {\n          marginTop: 40,\n          marginRight: -50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"time\",\n        label: \"Event Time\",\n        type: \"time\",\n        name: \"time\",\n        onChange: this.handleChange,\n        value: this.state.time,\n        style: {\n          width: 170\n        },\n        InputLabelProps: {\n          shrink: true\n        },\n        inputProps: {\n          step: 300 // 5 min\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        style: {\n          marginTop: 20,\n          marginLeft: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Select participiants\"), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, this.state.contacts.map(data => {\n        const labelId = `checkbox-list-label-${data.key}`;\n        return React.createElement(ListItem, {\n          key: data.key,\n          role: undefined,\n          dense: true,\n          button: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, React.createElement(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          edge: \"start\",\n          onChange: () => {\n            if (this.state.selectedContacts.indexOf(data.data) === -1) {\n              this.state.selectedContacts.push(data.data);\n            } else {\n              let index = this.state.selectedContacts.indexOf(data.data);\n              this.state.selectedContacts.splice(index, 1);\n            }\n          },\n          tabIndex: -1,\n          disableRipple: true,\n          inputProps: {\n            'aria-labelledby': labelId\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        })), React.createElement(ListItemText, {\n          id: labelId,\n          primary: `${data.data}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }));\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          marginLeft: 500\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.submit_data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Submit\")))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default CreateEvent;","map":{"version":3,"sources":["/Users/yakuphanbilgic/Desktop/d/İTÜ/2019-2020 | Fall/CP/CP4/cp4-front/src/components/createEvent/createEvent.js"],"names":["React","axios","config","NavBar","Typography","Paper","MenuItem","Button","FormControlLabel","Grid","TextField","List","ListItem","ListItemIcon","ListItemText","Checkbox","Form","CreateEvent","Component","constructor","handleChange","e","setState","target","name","value","handleCheckboxListChange","values","state","date","time","venueName","eventName","contacts","selectedContacts","submit_data","bind","componentDidMount","userId","localStorage","getItem","props","history","push","key","data","preventDefault","console","log","method","url","EVENT_URL","headers","then","res","success","catch","err","render","backgroundColor","marginLeft","marginRight","marginTop","width","height","padding","handleSubmit","form","submitting","pristine","shrink","step","map","labelId","undefined","indexOf","index","splice"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport config from \"../../config\"\nimport NavBar from \"../nav-bar/navigationBar\";\nimport Typography from '@material-ui/core/Typography';\nimport {Paper, MenuItem, Button, FormControlLabel, Grid, TextField} from \"@material-ui/core\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Form} from 'react-final-form'\n\nclass CreateEvent extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            date: \"\",\n            time: \"\",\n            venueName: \"\",\n            eventName: \"\",\n            contacts: [],\n            selectedContacts: []\n        };\n        this.submit_data = this.submit_data.bind(this)\n\n    }\n\n    componentDidMount() {\n        let userId = localStorage.getItem(\"userId\");\n\n        if (userId === null) {\n            this.props.history.push(\"/login\");\n        }\n\n        //use user id to get contacts and change state\n        this.setState({contacts: [{key: 1, data: \"first\"}]});\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n\n    handleCheckboxListChange = (values) => {\n        // values is array of selected item. e.g. ['apple', 'banana']\n    };\n\n    submit_data(e) {\n        e.preventDefault();\n        console.log(this.state);\n\n        axios({\n            method: 'post',\n            url: config.EVENT_URL,\n            headers: {\n                'Content-Type': 'application/json',\n                //'Authorization': this.state.user_token\n                },\n            data: {\n                //\"players\": [this.state.user_id],\n\n            }\n        }).\n        then((res) => {\n            if (res.data.success) {\n                this.setState({\n                    //share_code: res.data.data.shareCode,\n                })\n            }}).\n        catch((err) => {\n            console.log(\"err\", err);\n        })\n    }\n\n    render(){\n        return(\n<Fragment>\n    <NavBar/>\n\n\n    <Paper variant=\"outlined\" style={{backgroundColor:\"#b3e5fc\", marginLeft: \"auto\", marginRight: \"auto\", marginTop: 40, width: 600, height:500, padding: 16 }}>\n        <Typography variant=\"h4\" align='center' gutterBottom>\n            Create a Meeting\n        </Typography>\n        <Form\n            onSubmit={this.submit_data}\n            render={({handleSubmit, form, submitting, pristine, values}) => (\n                <form onSubmit={this.submit_data}>\n                    <Grid container>\n                        <Grid item xs={6} style={{marginLeft: 50}}>\n                            <TextField\n                                id=\"event\"\n                                name=\"eventName\"\n                                label=\"Event Name\"\n                                onChange={this.handleChange}\n                                value={this.state.eventName}\n                            />\n                        </Grid>\n                        <Grid item xs={6} style={{marginRight: -50}}>\n                            <TextField\n                                id=\"venue\"\n                                name=\"venueName\"\n                                onChange={this.handleChange}\n                                label=\"Venue Name\"\n                                value={this.state.venueName}\n                            />\n                        </Grid>\n                        <Grid item xs={6} style={{marginTop: 40, marginLeft: 50}}>\n                            <TextField\n                                id=\"date\"\n                                label=\"Event Date\"\n                                name=\"date\"\n                                onChange={this.handleChange}\n                                style={{width:170}}\n                                type=\"date\"\n                                value={this.state.date}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={6} style={{marginTop: 40, marginRight: -50}}>\n                            <TextField\n                                id=\"time\"\n                                label=\"Event Time\"\n                                type=\"time\"\n                                name=\"time\"\n                                onChange={this.handleChange}\n                                value={this.state.time}\n                                style={{width:170}}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                inputProps={{\n                                    step: 300, // 5 min\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={6} style={{marginTop:20, marginLeft: 50}}>\n                            <Typography variant=\"h6\" align='center' gutterBottom>\n                                Select participiants\n                            </Typography>\n                            <List>\n                                {this.state.contacts.map(data => {\n                                    const labelId = `checkbox-list-label-${data.key}`;\n                                    return (\n                                        <ListItem key={data.key} role={undefined} dense button>\n                                            <ListItemIcon>\n                                                <Checkbox\n                                                    edge=\"start\"\n                                                    onChange={() => {\n                                                        if (this.state.selectedContacts.indexOf(data.data) === -1) {\n                                                            this.state.selectedContacts.push(data.data)\n                                                        }\n                                                        else {\n                                                            let index = this.state.selectedContacts.indexOf(data.data);\n                                                            this.state.selectedContacts.splice(index, 1);\n                                                        }\n                                                    }}\n                                                    tabIndex={-1}\n                                                    disableRipple\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                />\n                                            </ListItemIcon>\n                                            <ListItemText id={labelId} primary={`${data.data}`} />\n                                        </ListItem>\n                                    );\n                                })}\n                            </List>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Button\n                                style={{marginLeft: 500}}\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={this.submit_data}\n                            >\n                                Submit\n                            </Button>\n                        </Grid>\n                    </Grid>\n\n                </form>\n\n            )}\n        />\n    </Paper>\n</Fragment>\n\n        )\n\n\n    }\n\n}\n\nexport default CreateEvent;\n"]},"metadata":{},"sourceType":"module"}